<html lang="en">

<head>
    <meta charset='utf-8' />
    <title>Eltham Map</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://static-assets.mapbox.com/gl-pricing/dist/mapbox-gl.js'></script>
    <script src='events-and-attractions.js'></script    >
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.css' rel='stylesheet' />
    <link rel="stylesheet" type="text/css" href='style.css'/><meta name="apple-mobile-web-app-capable" content="yes" />
</head>

<body>

<div id="top-bar">
    <span id="attractions-section-button" class="section-header" onclick="attractionsSectionButtonClicked()" >Attractions</span>
    <span id="whats-on-section-button" class="section-header" onclick="whatsOnSectionButtonClicked()">What's on?</span>
</div>

 <div id="side-panel">
     <div id="whats-on" class="sidepanel" onclick="whatsOnSectionButtonClicked()"></div>
     <div id="attractions" class="sidepanel" ></div>
 </div>
<div id = 'map-container'>
    <div id='map'></div>
</div>

<script>

String.prototype.replaceAll = function(search, replacement) {
    var target = this;
    return target.split(search).join(replacement);
};

mapboxgl.accessToken = 'pk.eyJ1IjoibWF0dHJmYXJyb3ciLCJhIjoiS0gtNnVKUSJ9.9n4like7mmNyB4aDm27uXw';

var mobile = !window.matchMedia("only screen and (min-width: 401px)").matches;

var attractionToShowId = getUrlVars()["poi"];
if(attractionToShowId) {
    var attractionToShow = attractions.find(function (attraction) {
        return attractionToShowId.replaceAll("_", " ") === attraction.name
    });
}

if(!mobile || attractionToShow) {
    var map = new mapboxgl.Map({
        container: 'map',
        style: 'mapbox://styles/mapbox/streets-v11',
        center: [0.0573, 51.452],
        zoom: 15
    });

    attractions.forEach(addMarkers);
}

zoomMapToCoords = function(poi) {
    console.log(poi);
    if(!mobile) {
        map.panTo(poi.coords);
    } else {
        window.location.href = location.protocol + '//' + location.host + location.pathname + '?poi='+poi.name.replaceAll(" ", "_");
    }
};

console.log("device pixel ratio: " + window.devicePixelRatio);


document.getElementById("attractions").appendChild(generateAttractionsTable(attractions));
document.getElementById("attractions").style.display = "none";
document.getElementById("whats-on").appendChild(generateWhatsOnTable(events));

if(mobile) {
    if(attractionToShow) {
        console.log("showing attraction:");
        console.log(attractionToShow);
        var sidepanel = document.getElementById("side-panel");

        if(attractionToShow) {
            map.style.display = "block";

            console.log("Wahhh");
        } else {
            map.style.display = "none";
            sidepanel.style.display="block";
        }
    } else {
        document.getElementById("map").style.display = "none";
    }
}

function addMarkers(attraction) {
    var popupContent = document.createElement("div");

    var popupTitle = document.createElement("h2");
    popupTitle.innerText = attraction.name;
    popupContent.appendChild(popupTitle);

    if(attraction.desc) {
        var popupDesc = document.createElement("div");
        popupDesc.innerText = attraction.desc;
        popupContent.appendChild(popupDesc);
    }

    if(attraction.website) {
        var popupUrl = document.createElement("a");
        popupUrl.href = attraction.website;
        popupUrl.innerText = "Website";
        popupUrl.target="_blank";
        popupContent.appendChild(popupUrl);
    }


    var popup = new mapboxgl.Popup({ offset: 25 })
    .setDOMContent(popupContent);

    // create DOM element for the marker
    var el = document.createElement('div');
    el.className = 'marker';

    // create the marker
    new mapboxgl.Marker(el)
    .setLngLat(attraction.coords)
    .setPopup(popup) // sets a popup on this marker
    .addTo(map);
}

function generateAttractionsTableRow(attraction) {
    var nameDiv = document.createElement("div");
    nameDiv.innerHTML = attraction.name;
    nameDiv.className = "attraction-name";

    var descDiv = document.createElement("div");
    descDiv.innerHTML = attraction.desc;

    var el = document.createElement('div');
    el.appendChild(nameDiv);
    el.appendChild(descDiv);
    el.onclick = function() {zoomMapToCoords(attraction)};

    var td = document.createElement("td");
    td.className = "attraction";
    td.appendChild(el);

    var outerTr = document.createElement("tr");
    outerTr.appendChild(td);
    return outerTr;
}

function generateAttractionsTable(attractions) {
    var attractionsTable = document.createElement("table");
    attractionsTable.id = "attractionsTable";

    attractions.forEach(function(attraction) {
       var el = generateAttractionsTableRow(attraction);
       attractionsTable.appendChild(el);
    });
    return attractionsTable;
}

function generateWhatsOnTableRow(event, attraction) {
    var nameDiv = document.createElement("div");
    nameDiv.innerHTML = event.title;
    nameDiv.className = "attraction-name";

    var locationDiv = document.createElement("div");
    var timeAndPlace = "At " + attraction.name;
    if(event.timeSpecified) {
        timeAndPlace += " @"+getTimeAsString(event.date);
    }
    locationDiv.innerHTML = timeAndPlace;
    locationDiv.className = "attraction-name";

    var descDiv = document.createElement("div");
    if(event.shortDesc) {
        descDiv.innerHTML = event.shortDesc;
    }

    var el = document.createElement('div');
    el.appendChild(nameDiv);
    el.appendChild(locationDiv);
    el.appendChild(descDiv);
    el.onclick = function() {zoomMapToCoords(attraction)};

    var td = document.createElement("td");
    td.className = "attraction";
    td.appendChild(el);

    var outerTr = document.createElement("tr");
    outerTr.className = "whatsOnRow";
    outerTr.appendChild(td);
    return outerTr;
}

function getTimeAsString(date) {
    var minutes = date.getMinutes() !== 0
    ? ":" + date.getMinutes()
    : "";

    if(date.getHours()>12) {
        return (date.getHours()-12) + minutes + "pm";
    } else if (date.getHours() === 12) {
        return date.getHours() + minutes + "pm";
    } else {
        return date.getHours() + minutes + "am";
    }
}

function generateDateRow(date) {
    var days = [ "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];
    var months = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
    var dateString = days[date.getDay()] + " " +date.getDate() + " " + months[date.getMonth()];

    var dateTd = document.createElement("td");
    dateTd.innerHTML = dateString;
    dateTd.className = "attraction-name";

    var dateTr = document.createElement("tr");
    dateTr.className = "dateRow";
    dateTr.appendChild(dateTd);

    return dateTr;
}

function generateWhatsOnTable(events) {
    var whatsOnTable = document.createElement("table");
    whatsOnTable.id = "eventsTable";

    var sortedEvents = events.slice();
    sortedEvents.sort(function(a,b){return a.date - b.date;});

    var lastEventDate;

    sortedEvents.forEach(function(event) {

       if(!lastEventDate || lastEventDate.getTime() !== event.date.getTime()) {
         whatsOnTable.appendChild(generateDateRow(event.date));
       }
       var poi = attractions.find(function(attraction) {return event.poi === attraction.name});

       whatsOnTable.appendChild(generateWhatsOnTableRow(event, poi));
       lastEventDate = event.date;
    });
    return whatsOnTable;
}


function attractionsSectionButtonClicked() {
    if(mobile && map){
        document.getElementById("map-container").style.display="none"
    }
    document.getElementById("attractions").style.display = "block";
    document.getElementById("whats-on").style.display = "none";
}

function whatsOnSectionButtonClicked() {
    if(mobile && map){
        document.getElementById("map-container").style.display="none"
    }
    document.getElementById("attractions").style.display = "none";
    document.getElementById("whats-on").style.display = "block";
}

function getUrlVars() {
    var vars = {};
    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
        vars[key] = value;
    });
    return vars;
}


</script>
 
</body>
</html>

